;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Skirmish.kif;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ROLE Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(role white)(role black);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; INIT Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(init (location 1 1 whiteRook))(init (location 2 1 whiteKnight))(init (location 3 1 whiteBishop))(init (location 4 1 whiteQueen))(init (location 5 1 whiteKing))(init (location 6 1 whiteBishop))(init (location 7 1 whiteKnight))(init (location 8 1 whiteRook))(init (location 1 2 whitePawn))(init (location 2 2 whitePawn))(init (location 3 2 whitePawn))(init (location 4 2 whitePawn))(init (location 5 2 whitePawn))(init (location 6 2 whitePawn))(init (location 7 2 whitePawn))(init (location 8 2 whitePawn))(init (location 1 7 blackPawn))	(init (location 2 7 blackPawn))	(init (location 3 7 blackPawn))	(init (location 4 7 blackPawn))	(init (location 5 7 blackPawn))	(init (location 6 7 blackPawn))	(init (location 7 7 blackPawn))	(init (location 8 7 blackPawn))	(init (location 1 8 blackRook))(init (location 2 8 blackKnight))(init (location 3 8 blackBishop))(init (location 4 8 blackQueen))(init (location 5 8 blackKing))(init (location 6 8 blackBishop))(init (location 7 8 blackKnight))(init (location 8 8 blackRook))(init (captureCount white 0))(init (captureCount black 0))	(init (control white))(init (step 1))	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; LEGAL Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (legal ?player (move ?x1 ?y1 ?x2 ?y2))    (true (control ?player))    (cellOccupiedBy ?x1 ?y1 ?player)    (validMove ?x1 ?y1 ?x2 ?y2)    (not (cellOccupiedBy ?x2 ?y2 ?player)))	(<= (legal ?player noop)    (role ?player)    (not (true (control ?player))));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; NEXT Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (next (location ?x2 ?y2 ?piece))    (role ?player)    (does ?player (move ?x1 ?y1 ?x2 ?y2))    (true (location ?x1 ?y1 ?piece))	(not (type ?piece pawn)))(<= (next (location ?x2 ?y2 ?piece))    (does white (move ?x1 ?y1 ?x2 ?y2))    (true (location ?x1 ?y1 ?piece))	(type ?piece pawn)	(distinct ?y2 8))(<= (next (location ?x2 8 whiteQueen))    (does white (move ?x1 ?y1 ?x2 8))    (true (location ?x1 ?y1 ?piece))	(type ?piece pawn))	(<= (next (location ?x2 ?y2 ?piece))    (does black (move ?x1 ?y1 ?x2 ?y2))    (true (location ?x1 ?y1 ?piece))	(type ?piece pawn)	(distinct ?y2 1))(<= (next (location ?x2 1 blackQueen))    (does black (move ?x1 ?y1 ?x2 1))    (true (location ?x1 ?y1 ?piece))	(type ?piece pawn))	(<= (next (location ?x ?y ?piece))    (true (location ?x ?y ?piece))    (role ?player)    (does ?player (move ?x1 ?y1 ?x2 ?y2))    (distinctCell ?x ?y ?x1 ?y1)    (distinctCell ?x ?y ?x2 ?y2))(<= (next (captureCount ?player ?count))    (true (captureCount ?player ?count))    (not (true (control ?player))))(<= (next (captureCount ?player ?count))    (true (captureCount ?player ?count))    (does ?player (move ?x1 ?y1 ?x2 ?y2))    (role ?opponent)    (not (true (control ?opponent)))    (not (cellOccupiedBy ?x2 ?y2 ?opponent)))(<= (next (captureCount ?player ?count2))    (true (captureCount ?player ?count1))    (does ?player (move ?x1 ?y1 ?x2 ?y2))    (role ?opponent)    (not (true (control ?opponent)))    (cellOccupiedBy ?x2 ?y2 ?opponent)    (countPlus ?count1 ?count2))(<= (next (control white))    (true (control black)))(<= (next (control black))    (true (control white)))(<= (next (step ?tpp))    (true (step ?t))    (pp ?t ?tpp))		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; TERMINAL Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= terminal    (role ?player)    (not (hasPiece ?player)))    (<= terminal    (role ?player)    (not (hasLegalMove ?player)))(<= terminal    (true (step 50))) ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; GOAL Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (goal ?player ?goal)    (role ?player)    (true (captureCount ?player ?count))    (scoreMap ?count ?goal)) ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; View Definitions;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (validMove ?x1 ?y1 ?x2 ?y2)    (true (location ?x1 ?y1 ?piece))    (type ?piece pawn)	(owns ?piece white)    (whitePawnMove ?x1 ?y1 ?x2 ?y2))(<= (validMove ?x1 ?y1 ?x2 ?y2)    (true (location ?x1 ?y1 ?piece))    (type ?piece pawn)	(owns ?piece black)    (blackPawnMove ?x1 ?y1 ?x2 ?y2))(<= (validMove ?x1 ?y1 ?x2 ?y2)    (true (location ?x1 ?y1 ?piece))    (type ?piece rook)    (rookMove ?x1 ?y1 ?x2 ?y2))(<= (validMove ?x1 ?y1 ?x2 ?y2)    (true (location ?x1 ?y1 ?piece))    (type ?piece knight)    (knightMove ?x1 ?y1 ?x2 ?y2))(<= (validMove ?x1 ?y1 ?x2 ?y2)    (true (location ?x1 ?y1 ?piece))    (type ?piece bishop)    (bishopMove ?x1 ?y1 ?x2 ?y2))(<= (validMove ?x1 ?y1 ?x2 ?y2)    (true (location ?x1 ?y1 ?piece))    (type ?piece queen)    (queenMove ?x1 ?y1 ?x2 ?y2))(<= (validMove ?x1 ?y1 ?x2 ?y2)    (true (location ?x1 ?y1 ?piece))    (type ?piece king)    (kingMove ?x1 ?y1 ?x2 ?y2))(<= (whitePawnMove ?x 2 ?x 4)    (cellEmpty ?x 3)	(cellEmpty ?x 4))(<= (whitePawnMove ?x ?y1 ?x ?y2)    (plus 1 ?y1 ?y2)	(cellEmpty ?x ?y2))(<= (whitePawnMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x1 ?x2)    (plus 1 ?y1 ?y2)	(cellOccupiedBy ?x2 ?y2 black))(<= (whitePawnMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x2 ?x1)    (plus 1 ?y1 ?y2)	(cellOccupiedBy ?x2 ?y2 black))(<= (blackPawnMove ?x 7 ?x 5)    (cellEmpty ?x 6)    (cellEmpty ?x 5))(<= (blackPawnMove ?x ?y1 ?x ?y2)    (plus 1 ?y2 ?y1)    (cellEmpty ?x ?y2))(<= (blackPawnMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x1 ?x2)    (plus 1 ?y2 ?y1)    (cellOccupiedBy ?x2 ?y2 white))(<= (blackPawnMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x2 ?x1)    (plus 1 ?y2 ?y1)    (cellOccupiedBy ?x2 ?y2 white))(<= (rookMove ?x1 ?y1 ?x2 ?y2)    (horizontalMove ?x1 ?y1 ?x2 ?y2))(<= (rookMove ?x1 ?y1 ?x2 ?y2)    (horizontalMove ?x2 ?y2 ?x1 ?y1))(<= (rookMove ?x1 ?y1 ?x2 ?y2)    (verticalMove ?x1 ?y1 ?x2 ?y2))(<= (rookMove ?x1 ?y1 ?x2 ?y2)    (verticalMove ?x2 ?y2 ?x1 ?y1))	(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?x1 ?x2)    (plus 1 ?y1 ?y2))(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?x1 ?x2)    (plus 1 ?y2 ?y1))(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?x2 ?x1)    (plus 1 ?y1 ?y2))(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?x2 ?x1)    (plus 1 ?y2 ?y1))(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?y1 ?y2)    (plus 1 ?x1 ?x2))(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?y1 ?y2)    (plus 1 ?x2 ?x1))(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?y2 ?y1)    (plus 1 ?x1 ?x2))(<= (knightMove ?x1 ?y1 ?x2 ?y2)    (plus 2 ?y2 ?y1)    (plus 1 ?x2 ?x1))(<= (bishopMove ?x1 ?y1 ?x2 ?y2)    (diagonalUpMove ?x1 ?y1 ?x2 ?y2))(<= (bishopMove ?x1 ?y1 ?x2 ?y2)    (diagonalUpMove ?x2 ?y2 ?x1 ?y1))(<= (bishopMove ?x1 ?y1 ?x2 ?y2)    (diagonalDownMove ?x1 ?y1 ?x2 ?y2))(<= (bishopMove ?x1 ?y1 ?x2 ?y2)    (diagonalDownMove ?x2 ?y2 ?x1 ?y1))	(<= (queenMove ?x1 ?y1 ?x2 ?y2)    (rookMove ?x1 ?y1 ?x2 ?y2))(<= (queenMove ?x1 ?y1 ?x2 ?y2)    (bishopMove ?x1 ?y1 ?x2 ?y2))	(<= (kingMove ?x1 ?y ?x2 ?y)    (plus 1 ?x1 ?x2)    (index ?y))(<= (kingMove ?x1 ?y ?x2 ?y)    (plus 1 ?x2 ?x1)    (index ?y))(<= (kingMove ?x ?y1 ?x ?y2)    (plus 1 ?y1 ?y2)    (index ?x))(<= (kingMove ?x ?y1 ?x ?y2)    (plus 1 ?y2 ?y1)    (index ?x))(<= (kingMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x1 ?x2)    (plus 1 ?y1 ?y2))	(<= (kingMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x2 ?x1)    (plus 1 ?y1 ?y2))	(<= (kingMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x1 ?x2)    (plus 1 ?y2 ?y1))	(<= (kingMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x2 ?x1)    (plus 1 ?y2 ?y1))	(<= (horizontalMove ?x1 ?y ?x3 ?y)    (plus 1 ?x1 ?x2)    (cellEmpty ?x2 ?y)    (horizontalMove ?x2 ?y ?x3 ?y)    (index ?y))(<= (horizontalMove ?x1 ?y ?x2 ?y)    (plus 1 ?x1 ?x2)    (index ?y))(<= (verticalMove ?x ?y1 ?x ?y3)    (plus 1 ?y1 ?y2)    (cellEmpty ?x ?y2)    (verticalMove ?x ?y2 ?x ?y3)    (index ?x))(<= (verticalMove ?x ?y1 ?x ?y2)    (plus 1 ?y1 ?y2)    (index ?x))		(<= (diagonalUpMove ?x1 ?y1 ?x3 ?y3)    (plus 1 ?x1 ?x2)    (plus 1 ?y1 ?y2)    (cellEmpty ?x2 ?y2)    (diagonalUpMove ?x2 ?y2 ?x3 ?y3))(<= (diagonalUpMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x1 ?x2)    (plus 1 ?y1 ?y2))		(<= (diagonalDownMove ?x1 ?y1 ?x3 ?y3)    (plus 1 ?x1 ?x2)    (plus 1 ?y2 ?y1)    (cellEmpty ?x2 ?y2)    (diagonalDownMove ?x2 ?y2 ?x3 ?y3))(<= (diagonalDownMove ?x1 ?y1 ?x2 ?y2)    (plus 1 ?x1 ?x2)     (plus 1 ?y2 ?y1))	(<= (hasLegalMove ?player)    (cellOccupiedBy ?x1 ?y1 ?player)    (validMove ?x1 ?y1 ?x2 ?y2)    (not (cellOccupiedBy ?x2 ?y2 ?player)))	(<= (hasPiece ?player)    (true (location ?x ?y ?piece))    (owns ?piece ?player))	(<= (distinctCell ?x1 ?y1 ?x2 ?y2)    (cell ?x1 ?y1)    (cell ?x2 ?y2)    (distinct ?x1 ?x2))(<= (distinctCell ?x1 ?y1 ?x2 ?y2)    (cell ?x1 ?y1)    (cell ?x2 ?y2)    (distinct ?y1 ?y2))(<= (cellOccupiedBy ?x ?y ?player)    (true (location ?x ?y ?piece))    (owns ?piece ?player))	(<= (cellEmpty ?x ?y)    (cell ?x ?y)    (not (cellOccupiedBy ?x ?y black))    (not (cellOccupiedBy ?x ?y white)))(<= (cell ?x ?y)    (index ?x)    (index ?y))	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Static Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(index 1) (index 2) (index 3) (index 4) (index 5) (index 6) (index 7) (index 8)	(plus 1 1 2) (plus 1 2 3) (plus 1 3 4) (plus 1 4 5) (plus 1 5 6) (plus 1 6 7) (plus 1 7 8)(plus 2 1 3) (plus 2 2 4) (plus 2 3 5) (plus 2 4 6) (plus 2 5 7) (plus 2 6 8)	(countPlus  0  1) (countPlus  1  2) (countPlus  2  3) (countPlus  3  4) (countPlus  4  5) (countPlus  5  6) (countPlus  6  7) (countPlus  7  8)(countPlus  8  9) (countPlus  9 10) (countPlus 10 11) (countPlus 11 12)(countPlus 12 13) (countPlus 13 14) (countPlus 14 15) (countPlus 15 16)	           (pp  1  2) (pp  2  3) (pp  3  4) (pp  4  5) (pp  5  6) (pp  6  7) (pp  7  8) (pp  8  9) (pp  9  10)(pp 10 11) (pp 11 12) (pp 12 13) (pp 13 14) (pp 14 15) (pp 15 16) (pp 16 17) (pp 17 18) (pp 18 19) (pp 19  20)	(pp 20 21) (pp 21 22) (pp 22 23) (pp 23 24) (pp 24 25) (pp 25 26) (pp 26 27) (pp 27 28) (pp 28 29) (pp 29  30)	(pp 30 31) (pp 31 32) (pp 32 33) (pp 33 34) (pp 34 35) (pp 35 36) (pp 36 37) (pp 37 38) (pp 38 39) (pp 39  40)	(pp 40 41) (pp 41 42) (pp 42 43) (pp 43 44) (pp 44 45) (pp 45 46) (pp 46 47) (pp 47 48) (pp 48 49) (pp 49  50)	(pp 50 51) (pp 51 52) (pp 52 53) (pp 53 54) (pp 54 55) (pp 55 56) (pp 56 57) (pp 57 58) (pp 58 59) (pp 59  60)	(pp 60 61) (pp 61 62) (pp 62 63) (pp 63 64) (pp 64 65) (pp 65 66) (pp 66 67) (pp 67 68) (pp 68 69) (pp 69  70)	(pp 70 71) (pp 71 72) (pp 72 73) (pp 73 74) (pp 74 75) (pp 75 76) (pp 76 77) (pp 77 78) (pp 78 79) (pp 79  80)	(pp 80 81) (pp 81 82) (pp 82 83) (pp 83 84) (pp 84 85) (pp 85 86) (pp 86 87) (pp 87 88) (pp 88 89) (pp 89  90)	(pp 90 91) (pp 91 92) (pp 92 93) (pp 93 94) (pp 94 95) (pp 95 96) (pp 96 97) (pp 97 98) (pp 98 99) (pp 99 100)	(scoreMap  0   0)(scoreMap  1   6)(scoreMap  2  12)(scoreMap  3  18)(scoreMap  4  24)(scoreMap  5  30)(scoreMap  6  36)(scoreMap  7  42)(scoreMap  8  48)(scoreMap  9  54)(scoreMap 10  60)(scoreMap 11  66)(scoreMap 12  72)(scoreMap 13  79)(scoreMap 14  86)(scoreMap 15  93)(scoreMap 16 100)	(owns whitePawn white)(owns whiteRook white)(owns whiteKnight white)(owns whiteBishop white)(owns whiteQueen white)(owns whiteKing white)(owns blackPawn black)	(owns blackRook black)	(owns blackKnight black)	(owns blackBishop black)	(owns blackQueen black)	(owns blackKing black)	(type whitePawn pawn)(type whiteRook rook)(type whiteKnight knight)(type whiteBishop bishop)(type whiteQueen queen)(type whiteKing king)(type blackPawn pawn)(type blackRook rook)(type blackKnight knight)(type blackBishop bishop)(type blackQueen queen)(type blackKing king)	